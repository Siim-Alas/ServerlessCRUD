@page "/editor"

@using Microsoft.AspNetCore.WebUtilities
@using Microsoft.Extensions.Primitives
@using ServerlessCrudClassLibrary
@using Services
@inject CrudFunctionAPIClient crudClient
@inject NavigationManager navigationManager

<h3>BlogPostEditor</h3>

<EditForm Model="blogPost" OnValidSubmit="OnValidSubmit">
    Post Title
    <InputText @bind-Value="blogPost.Title"></InputText>
    Author
    <InputText @bind-Value="blogPost.Author"></InputText>
    Text
    <InputTextArea @bind-Value="blogPost.Text"></InputTextArea>

    <button type="submit">Submit</button>
</EditForm>

@code {
    private BlogPostEntity blogPost { get; set; } = new BlogPostEntity("title", "author", "text");

    private async Task OnValidSubmit()
    {
        if (blogPost.IsValid)
        {
            Console.WriteLine((await crudClient.PostBlogPostAsync(blogPost)).StatusCode);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        Uri uri = navigationManager.ToAbsoluteUri(navigationManager.Uri);

        if ((QueryHelpers.ParseQuery(uri.Query).TryGetValue("partitionkey", out StringValues pk)) &&
            (QueryHelpers.ParseQuery(uri.Query).TryGetValue("rowkey", out StringValues rk)))
        {
            blogPost = await crudClient.GetBlogPostEntityAsync(pk, rk);
        }
    }
}
