@page "/blogposts"

@using ServerlessCrudClassLibrary
@using Services
@inject CrudFunctionAPIClient crudClient
@inject AuthenticationStateProvider authStateProvider

<h3>BlogPostListView</h3>

@foreach (BlogPostEntity post in request.BlogPosts)
{
    <div class="card">
        <div class="card-header">
            <h4>
                @if (post.Author == userName)
                {
                    <a href="@($"/detail/{post.PartitionKey}/{post.RowKey}")">@post.Title</a>
                }
                else
                {
                    @post.Title
                }
            </h4>
            <p>
                <small>By @post.Author -- Last Updated @post.Timestamp.ToLocalTime()</small>
            </p>
        </div>
        <div class="card-body">
            <p class="card-text">
                @post.Text
            </p>
        </div>
    </div>
}

<button type="button" @onclick="UpdatePosts">Update</button>

@code {
    private ListBlogPostEntitiesRequest request { get; set; } = new ListBlogPostEntitiesRequest();
    private string userName { get; set; }

    private async Task UpdatePosts()
    {
        request = await crudClient.PostListBlogPostsRequestAsync(request);
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        userName = (await authStateProvider.GetAuthenticationStateAsync()).User.Identity.Name;
        await UpdatePosts();
    }
}
