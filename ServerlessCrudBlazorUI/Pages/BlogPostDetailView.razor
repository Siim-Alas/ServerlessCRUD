@page "/detail/{dateString}/{rowKey}"

@using ServerlessCrudClassLibrary
@using ServerlessCrudBlazorUI.Services

@inject UnauthorizedCrudFunctionAPIClient client
@inject AuthenticationStateProvider authStateProvider

<div class="main mb-4">
    <div class="content pl-4 pb-4">
        <div>
            <h3>
                @blogPost.Title
            </h3>
            <p>
                <small>By @blogPost.Author &mdash; Last updated: @blogPost.Timestamp.ToLocalTime().ToString("hh:mm d MMMM yyyy")</small>
            </p>
        </div>
        <div>
            <p class="multiline">@PrettyPrinter.ParseMarkdownToHTML(blogPost.Text)</p>
        </div>
        @if (userName == blogPost.Author)
        {
            <NavLink href="@($"/editor?partitionkey={PrettyPrinter.BlogPostPartitionKeyFromDateString(DateString)}&rowkey={RowKey}")">Edit</NavLink>
        }
    </div>
</div>
<Sidebar>
    <h4>About @blogPost.Author</h4>
    <p>
        Vivamus id lectus lorem. Curabitur varius lectus mattis, 
        venenatis mauris tristique, porttitor nulla. Nam et scelerisque sem, 
        vitae eleifend mi. Proin tincidunt eros non nisi viverra fringilla.
    </p>
</Sidebar>

@code {
    [Parameter]
    public string DateString { get; set; }
    [Parameter]
    public string RowKey { get; set; }

    private string userName;
    private BlogPostEntity blogPost { get; set; } = new BlogPostEntity("", "");

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        userName = (await authStateProvider.GetAuthenticationStateAsync()).User.Identity.Name;
    }

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();

        blogPost = await client.GetBlogPostEntityAsync(
            PrettyPrinter.BlogPostPartitionKeyFromDateString(DateString),
            RowKey);
    }
}
