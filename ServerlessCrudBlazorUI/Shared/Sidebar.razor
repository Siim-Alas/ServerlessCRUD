@using ServerlessCrudClassLibrary
@using ServerlessCrudBlazorUI.Services

@inject UnauthorizedCrudFunctionAPIClient client

<div class="sidebar p-4">
    <h4>About you</h4>
    <p>
        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus volutpat mi id nibh rhoncus consectetur.
        Nulla eu semper neque. Donec at ipsum quis libero semper sagittis. Cras dolor diam, accumsan quis orci ac,
        pellentesque porta neque. In ac dictum leo.
    </p>

    <h4>Latest Posts</h4>
    <ul class="list-group list-group-flush">
        @foreach (BlogPostEntity post in response.BlogPosts)
        {
            <li class="list-group-item">
                <h4>
                    <NavLink href="@($"/detail/{PrettyPrinter.DateStringFromBlogPostPartitionKey(post.PartitionKey)}/{post.RowKey}")">@post.Title</NavLink>
                </h4>
                <p>
                    <small>By @post.Author &mdash; @post.Timestamp.ToLocalTime().ToString("d MMMM yyyy")</small>
                </p>
            </li>
        }
    </ul>
    @if (!hasInitialized)
    {
        <p>Fetching blog posts...</p>
    }
</div>

@code {
    private QueryBlogPostEntitiesResponse response { get; set; } = new QueryBlogPostEntitiesResponse(null, new List<BlogPostEntity>());
    private bool hasInitialized { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        response = await client.GetQueryBlogPostsResponseAsync(
            takeCount: 4,
            selectColumns: new List<string>()
            {
                "PartitionKey",
                "RowKey",
                "Timestamp",
                "Author"
            });

        hasInitialized = true;
    }
}
