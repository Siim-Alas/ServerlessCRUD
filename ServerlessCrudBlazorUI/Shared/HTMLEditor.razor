@using ServerlessCrudBlazorUI.Services

@inject QuillClient Quill

<div @ref="ToolbarReference">
    <select class="ql-header">
        <option selected=""></option>
        <option value="1"></option>
        <option value="2"></option>
        <option value="3"></option>
        <option value="4"></option>
        <option value="5"></option>
    </select>
    <span class="ql-formats">
        <button class="ql-bold"></button>
        <button class="ql-italic"></button>
        <button class="ql-underline"></button>
        <button class="ql-strike"></button>
    </span>
    <span class="ql-formats">
        <select class="ql-color"></select>
        <select class="ql-background"></select>
    </span>
    <span class="ql-formats">
        <button class="ql-list" value="ordered"></button>
        <button class="ql-list" value="bullet"></button>
    </span>
    <span class="ql-formats">
        <button class="ql-link"></button>
    </span>
</div>
<div class="text-editor" @ref="EditorReference">
    @Content
</div>

@code {
    [Parameter]
    public MarkupString Content { get; set; }

    private ElementReference ToolbarReference { get; set; }
    private ElementReference EditorReference { get; set; }

    public async Task<MarkupString> GetInnerHTML()
    {
        return await Quill.GetHTML(EditorReference);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (firstRender)
        {
            await Quill.InitAsync(ToolbarReference, EditorReference);
        }
    }
}
